openapi: 3.0.0
info:
  description: " Geo data Service"
  version: "1.0"
  title: " Geodata Service"
paths:
  /v1/continents:
    get:
      summary: Return list of continents
      operationId: listContinents
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PageContinent'

  "/v1/continents/{continentCode}":
    get:
      summary: Return continent by continent code
      operationId: findContinentByCode
      parameters:
        - name: continentCode
          in: path
          description: continentCode
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Continent"

  "/v1/continents/{continent}/countries":
    get:
      summary: Return countries on the specified continent
      operationId: findCountriesOnContinent
      parameters:
        - name: continent
          in: path
          description: continent
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageCountry"

  /v1/countries:
    get:
      summary: Return countries
      operationId: findCountries
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageCountry"

  "/v1/countries/{countryCode}":
    get:
      summary: Find country by 2-letter ISO country code
      operationId: findCountryByCode
      parameters:
        - name: countryCode
          in: path
          description: countryCode
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Country"

  "/v1/countries/{countryCode}/children":
    get:
      summary: Find top-level level administrative locations for the specified country
      operationId: findCountryChildren
      parameters:
        - name: countryCode
          in: path
          description: countryCode
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageGeoLocation"

  /v1/locations/contains:
    get:
      summary: Return the smallest area location containing the coordinates specified
      operationId: findWithin
      parameters:
        - name: maxDistance
          in: query
          description: maxDistance
          required: true
          schema:
            type: integer
            format: int32
        - name: lat
          in: query
          description: Latitude
          required: false
          schema:
            type: number
            format: double
        - name: lng
          in: query
          description: Longitude
          required: false
          schema:
            type: number
            format: double
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeoLocation"

  /v1/locations/coordinates:
    get:
      summary: Return location deemed closest to the specified coordinate
      operationId: findProximity
      parameters:
        - name: maxDistance
          in: query
          description: maxDistance
          required: true
          schema:
            type: integer
            format: int32
        - name: lat
          in: query
          description: Latitude
          required: false
          schema:
            type: number
            format: double
        - name: lng
          in: query
          description: Longitude
          required: false
          schema:
            type: number
            format: double
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeoLocation"

  /v1/locations/ids:
    get:
      summary: Return locations identified by ids
      operationId: findByIds
      parameters:
        - name: ids
          in: query
          description: ids
          required: true
          explode: true
          schema:
            type: array
            items:
              type: integer
              format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GeoLocation"

  "/v1/locations/ip/{ip}":
    get:
      summary: Return the approximate location for the IP-address specified
      operationId: findByIp
      parameters:
        - name: ip
          in: path
          description: ip
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeoLocation"

  "/v1/locations/name/{name}":
    get:
      summary: Return the approximate location for the IP-address specified
      operationId: findByName
      parameters:
        - name: name
          in: path
          description: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageGeoLocation"

  "/v1/locations/phone/{phone}":
    get:
      summary: Return the country for the phone number specified
      operationId: findCountryByPhone
      parameters:
        - name: phone
          in: path
          description: phone
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Country"

  /v1/locations/proximity:
    get:
      summary: Return locations sorted by proximity
      operationId: findNear
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - name: lat
          in: query
          description: Latitude
          required: false
          schema:
            type: number
            format: double
        - name: lng
          in: query
          description: Longitude
          required: false
          schema:
            type: number
            format: double
        - name: maxDistance
          in: query
          description: maxDistance
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageGeoLocationDistance"

  "/v1/locations/{id}":
    get:
      summary: Return the location by id
      operationId: findLocation
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeoLocation"

  "/v1/locations/{id}/boundaries":
    get:
      summary: Return boundaries in GeoJson format
      operationId: findBoundariesAsGeoJson
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK

  "/v1/locations/{id}/boundaries.wkb":
    get:
      summary: Return boundaries in WKB (Well Known Binary) format
      operationId: findBoundariesAsWkb
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: byte

  "/v1/locations/{id}/children":
    get:
      summary: Return child locations of the specified location
      operationId: findChildren
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - name: match_level
          in: query
          description: Whether to match the level, i.e avoid minor locations attached directly to a country for example. Enabled by default.
          required: false
          schema:
            type: boolean
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageGeoLocation"

  "/v1/locations/{id}/contains/{child}":
    get:
      summary: Return whether the child is contained by the location
      operationId: isLocationInside
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
        - name: child
          in: path
          description: child
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: boolean

  "/v1/locations/{id}/insideany/{ids}":
    get:
      summary: Return whether the location is inside any of the one's in the specified
        list
      operationId: insideAny
      parameters:
        - name: ids
          in: path
          description: ids
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: boolean

  "/v1/locations/{id}/outsideall/{ids}":
    get:
      summary: Return whether the location is outside all of the one's in the specified
        list
      operationId: outsideAll
      parameters:
        - name: ids
          in: path
          description: ids
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: boolean

  "/v1/locations/{id}/parent":
    get:
      summary: Return the parent location of the specified id if any
      operationId: findParentLocation
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeoLocation"

  "/v1/locations/{id}/previewboundaries":
    get:
      summary: Return boundaries in GeoJson format simplified to a suitable resolution
      operationId: findPreviewBoundariesgeoJson
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
        - name: minLng
          in: query
          required: false
          schema:
            type: number
            format: double
        - name: maxLng
          in: query
          required: false
          schema:
            type: number
            format: double
        - name: minLat
          in: query
          required: false
          schema:
            type: number
            format: double
        - name: maxLat
          in: query
          required: false
          schema:
            type: number
            format: double
        - name: height
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: width
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK

  "/v1/locations/{id}/previewboundaries.wkb":
    get:
      summary: Return boundaries in WKB (Well Known Binary) format simplified to a
        suitable resolution
      operationId: findPreviewBoundaries
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
        - name: minLng
          in: query
          required: false
          schema:
            type: number
            format: double
        - name: maxLng
          in: query
          required: false
          schema:
            type: number
            format: double
        - name: minLat
          in: query
          required: false
          schema:
            type: number
            format: double
        - name: maxLat
          in: query
          required: false
          schema:
            type: number
            format: double
        - name: height
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: width
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: byte

  "/v1/locations/{id}/simpleboundaries":
    get:
      summary: Return boundaries in GeoJson format simplified to the maxTolerance
        specified in Km
      operationId: findSimpleBoundaries1
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
        - name: maxTolerance
          in: query
          description: maxTolerance
          required: false
          schema:
            type: number
            format: double
      responses:
        200:
          description: OK

  "/v1/locations/{id}/simpleboundaries.wkb":
    get:
      summary: Return boundaries in WKB (Well Known Binary) format simplified to the
        maxTolerance specified in Km
      operationId: findSimpleBoundaries
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
        - name: maxTolerance
          in: query
          description: maxTolerance
          required: true
          schema:
            type: number
            format: double
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: byte


components:
  schemas:
    Page:
      type: object
      properties:
        total_elements:
          type: integer
        first:
          type: boolean
        last:
          type: boolean
        total_pages:
          type: integer
        number_of_elements:
          type: integer
        size:
          type: integer
        number:
          type: integer
      discriminator:
        propertyName: content

    Continent:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        continentCode:
          type: string
        coordinates:
          $ref: "#/components/schemas/Coordinates"
        featureClass:
          type: string
        featureCode:
          type: string
        population:
          type: integer
          format: int64

    Coordinates:
      type: object
      properties:
        lat:
          type: number
          format: double
        lng:
          type: number
          format: double
    Country:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        coordinates:
          $ref: "#/components/schemas/Coordinates"
        featureClass:
          type: string
        featureCode:
          type: string
        languages:
          type: array
          items:
            type: string
        parentLocationId:
          type: integer
          format: int32
        population:
          type: integer
          format: int64
        timeZone:
          type: string
        path:
          type: array
          items:
            $ref: '#/components/schemas/GeoLocationSummary'

    CountrySummary:
      type: object
      properties:
        code:
          type: string
        id:
          type: integer
          format: int32
        name:
          type: string

    GeoLocation:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        coordinates:
          $ref: "#/components/schemas/Coordinates"
        country:
          $ref: "#/components/schemas/CountrySummary"
        featureClass:
          type: string
        featureCode:
          type: string
        parentLocationId:
          type: integer
          format: int32
        population:
          type: integer
          format: int64
        timeZone:
          type: string
        hasChildren:
          type: boolean
        hasBoundary:
          type: boolean
        path:
          type: array
          items:
            $ref: '#/components/schemas/GeoLocationSummary'
      required:
        - id
        - name
        - coordinates
        - featureClass
        - featureCode
    GeoLocationSummary:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        featureClass:
          type: string
        featureCode:
          type: string

    GeoLocationDistance:
      type: object
      properties:
        distance:
          type: number
          format: double
        location:
          $ref: "#/components/schemas/GeoLocation"
    Sort:
      type: object
    PageContinent:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/Continent"
        first:
          type: boolean
        last:
          type: boolean
        number:
          type: integer
          format: int32
        numberOfElements:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          $ref: "#/components/schemas/Sort"
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
    PageCountry:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/Country"
        first:
          type: boolean
        last:
          type: boolean
        number:
          type: integer
          format: int32
        numberOfElements:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          $ref: "#/components/schemas/Sort"
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
    PageGeoLocationDistance:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/GeoLocationDistance"
        first:
          type: boolean
        last:
          type: boolean
        number:
          type: integer
          format: int32
        numberOfElements:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          $ref: "#/components/schemas/Sort"
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
    PageGeoLocation:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/GeoLocation"
        first:
          type: boolean
        last:
          type: boolean
        number:
          type: integer
          format: int32
        numberOfElements:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          $ref: "#/components/schemas/Sort"
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32

    SliceGeoLocation:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/GeoLocation"
        first:
          type: boolean
        last:
          type: boolean
        number:
          type: integer
          format: int32
        numberOfElements:
          type: integer
          format: int32
        size:
          type: integer
          format: int32

  parameters:
    page:
      name: page
      in: query
      description: Results page you want to retrieve (0..N)
      required: false
      schema:
        type: integer
        format: int32

    size:
      name: size
      in: query
      description: Number of records per page
      required: false
      schema:
        type: integer
        format: int32
